language: cpp

matrix:
  include:
    - os: osx
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5

      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6

      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7

      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

branch:
  except:
    - gh-pages

# Environment variables
env:
  global:
    - GH_REPO_NAME: shad
    - DOXYFILE: $TRAVIS_BUILD_DIR/Doxygen/Doxyfile
    - GH_REPO_REF: github.com/droccom/shad.git

# Install dependencies
addons:
  apt:
    packages:
      - doxygen
      - doxygen-doc
      - doxygen-latex
      - doxygen-gui
      - graphviz

before_install:
  - eval "${MATRIX_EVAL}"
  - git clone --branch release-1.8.0 --depth 1 https://github.com/google/googletest.git
  - cd googletest && mkdir build
  - cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$HOME/gtest-root -Bbuild -H.
  - cmake --build build -- -j 2
  - cmake --build build --target install
  - cd ..
  - git clone --depth 1 https://github.com/01org/tbb.git
  - cd tbb
  - make work_dir=$(pwd)/build-tbb tbb_root=$(pwd)
  - mkdir $HOME/tbb-root && cp -r include $HOME/tbb-root/
  - mkdir $HOME/tbb-root/lib && cp $(pwd)/build-tbb_release/libtbb* $HOME/tbb-root/lib/
  - cd ..
  - git clone --depth 1 --branch v1.4.1 https://github.com/google/benchmark.git
  - cd benchmark
  - mkdir build
  - cd build
  - cmake .. -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$HOME/benchmark-root
  - make
  - make install
  - cd ../..

script:
  - mkdir build-release
  - cmake -DCMAKE_BUILD_TYPE=Release -DSHAD_RUNTIME_SYSTEM=TBB -DGTEST_ROOT=$HOME/gtest-root -DTBB_ROOT=$HOME/tbb-root -Dbenchmark_ROOT=$HOME/benchmark-root -Bbuild-release -H.
  - cmake --build build-release -- -j 2
  - cmake --build build-release --target test -- ARGS="--output-on-failure"

# Generate and deploy documentation
after_success:
  - cd $TRAVIS_BUILD_DIR
  - chmod +x makedoc.sh
  - ./makedoc.sh
